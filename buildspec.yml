version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Installing source NPM dependencies...
      - npm install

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 010928211649.dkr.ecr.us-east-1.amazonaws.com
      - echo "Setting IMAGE_TAG based on commit hash or default to 'latest'..."
      - |
        export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
        if [ -z "$IMAGE_TAG" ]; then
          export IMAGE_TAG="latest"
        fi
      - echo "Using IMAGE_TAG: $IMAGE_TAG"

  build:
    commands:
      - echo Building the Docker image...
      - docker build -t ecr-repo-for-npm-app:$IMAGE_TAG .
      - echo Listing Docker images...
      - docker images

  post_build:
    commands:
      - echo Tagging the Docker image...
      - docker tag ecr-repo-for-npm-app:$IMAGE_TAG 010928211649.dkr.ecr.us-east-1.amazonaws.com/ecr-repo-for-npm-app:$IMAGE_TAG
      - echo Listing Docker images after tagging...
      - docker images
      - echo Pushing the Docker image to ECR...
      - docker push 010928211649.dkr.ecr.us-east-1.amazonaws.com/ecr-repo-for-npm-app:$IMAGE_TAG

artifacts:
  files:
    - '**/*'
